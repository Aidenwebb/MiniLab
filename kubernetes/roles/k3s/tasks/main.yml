---
- name: Download k3s binary
  ansible.builtin.get_url:
    url: https://github.com/k3s-io/k3s/releases/download/{{ k3s__k3s_version }}/k3s
    checksum: sha256:https://github.com/k3s-io/k3s/releases/download/{{ k3s__k3s_version }}/sha256sum-amd64.txt
    dest: "{{ role_path }}/files/bin/k3s"
    mode: "0755"
  delegate_to: localhost
  run_once: true
  register: k3s__k3s_binary

- name: Copy k3s binary to nodes
  ansible.builtin.copy:
    src: bin/k3s
    dest: /usr/local/bin/k3s
    owner: root
    group: root
    mode: "0755"

- name: Ensure the config directories exist
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: root
    group: root
    mode: "0755"
  loop:
    - /etc/rancher/k3s
    - /etc/rancher/node

- name: Check if k3s token file exists on first node - will use this token for all nodes
  run_once: true
  ansible.builtin.stat:
    path: {{ k3s__k3s_token_file }}
  register: k3s__k3s_token_file_stat

- name: Generate k3s token on first node if missing
  run_once: true
  when: not k3s__k3s_token_file_stat.stat.exists
  ansible.builtin.copy:
    content: "{{ lookup('ansible.builtin.password', '/dev/null length=32 chars=ascii_letters,digits,punctuation') }}"
    dest: {{ k3s__k3s_token_file }}
    owner: root
    group: root
    mode: "0600"

- name: Get k3s token from first node
  run_once: true
  ansible.builtin.slurp:
    src: {{ k3s__k3s_token_file }}
  register: k3s__k3s_token_file_from_first_node

- name: Copy first node's k3s token to all nodes
  ansible.builtin.copy:
    content: "{{ k3s__k3s_token_file_from_first_node['content'] | b64decode }}"
    dest: {{ k3s__k3s_token_file }}
    owner: root
    group: root
    mode: "0600"